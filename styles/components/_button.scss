.btn {
    &,
    &:link,
    &:visited {
        border-radius: 10rem;
        display: inline-block; /* allows button to be on same line as other content, but to behave like a block */
        font-size: $default-font-size;
        padding: 1.5rem 4rem;
        position: relative; /* so that pseudo button will reference this element */
        text-decoration: none;
        text-transform: uppercase;
        transition: all .2s;  /* transition property has to be on initial state */

        // Change for the <button> element
        border: none;
        cursor: pointer;
    } /* We want the visited state of this button to look the same as original state */

    &:hover {
        box-shadow: 0 1rem 2rem rgba($color-black, .2); /* 3rd value blurs the shadow */
        transform: translateY(-.3rem);

        &::after {
            opacity: 0;
            transform: scaleX(1.4) scaleY(1.6);
        }
    }
        
    &:active,
    &:focus {
        box-shadow: 0 .5rem 1rem rgba($color-black, .2);
        outline: none;
        transform: translateY(-.1rem);
    }
        
    &--white {
        background-color: $color-white;
        color: $color-grey-dark;

        &::after {
            background-color: $color-white;
        }
    }

    &--green {
        background-color: $color-primary;
        color: $color-white;

        &::after {
            background-color: $color-primary;
        }
    }
        
    &::after { /* pseudo element--create a similar looking button that usually hides behind original button */
        border-radius: 10rem;
        content: ""; /* Must ALWAYS specify content property, even if it is left blank */
        display: inline-block;    
        height: 100%; /* Relative to original button */
        left: 0;
        position: absolute;
        top: 0;
        transition: all .4s;
        width: 100%;
        z-index: -1; /* Behind original button */
    }
        
    &--animated {
        animation: moveInBottom 1s ease-out .75s; /* .75s --> delay after page refresh before animation occurs */
        animation-fill-mode: backwards; /* automatically applies styles at 0% before animation starts */
    }
}

.btn-text {
    &:link,
    &:visited {
        border-bottom: 1px solid $color-primary;
        color: $color-primary;
        display: inline-block;
        font-size: $default-font-size;
        padding: 3px;
        text-decoration: none; 
        transition: all .2s;       
    }

    &:hover {
        background-color: $color-primary;
        box-shadow: 0 1rem 2rem rgba($color-black,.2);
        color: $color-white;
        transform: translateY(-2px);
    }

    &:active {
        box-shadow: 0 .5rem 1rem rgba($color-black,.2);
        transform: translateY(0);
    }
}